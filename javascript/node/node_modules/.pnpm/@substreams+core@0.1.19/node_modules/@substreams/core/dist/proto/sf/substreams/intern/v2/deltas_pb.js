// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file sf/substreams/intern/v2/deltas.proto (package sf.substreams.internal.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Any, Message, proto3, protoInt64 } from "@bufbuild/protobuf";
/**
 * @generated from message sf.substreams.internal.v2.StoreDeltas
 */
export class StoreDeltas extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated sf.substreams.internal.v2.StoreDelta store_deltas = 1;
         */
        Object.defineProperty(this, "storeDeltas", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new StoreDeltas().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StoreDeltas().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StoreDeltas().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(StoreDeltas, a, b);
    }
}
Object.defineProperty(StoreDeltas, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: proto3
});
Object.defineProperty(StoreDeltas, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "sf.substreams.internal.v2.StoreDeltas"
});
Object.defineProperty(StoreDeltas, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: proto3.util.newFieldList(() => [
        { no: 1, name: "store_deltas", kind: "message", T: StoreDelta, repeated: true },
    ])
});
/**
 * @generated from message sf.substreams.internal.v2.StoreDelta
 */
export class StoreDelta extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: sf.substreams.internal.v2.StoreDelta.Operation operation = 1;
         */
        Object.defineProperty(this, "operation", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: StoreDelta_Operation.UNSET
        });
        /**
         * @generated from field: uint64 ordinal = 2;
         */
        Object.defineProperty(this, "ordinal", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: protoInt64.zero
        });
        /**
         * @generated from field: string key = 3;
         */
        Object.defineProperty(this, "key", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ""
        });
        /**
         * @generated from field: bytes old_value = 4;
         */
        Object.defineProperty(this, "oldValue", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        /**
         * @generated from field: bytes new_value = 5;
         */
        Object.defineProperty(this, "newValue", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new StoreDelta().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StoreDelta().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StoreDelta().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(StoreDelta, a, b);
    }
}
Object.defineProperty(StoreDelta, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: proto3
});
Object.defineProperty(StoreDelta, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "sf.substreams.internal.v2.StoreDelta"
});
Object.defineProperty(StoreDelta, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: proto3.util.newFieldList(() => [
        { no: 1, name: "operation", kind: "enum", T: proto3.getEnumType(StoreDelta_Operation) },
        { no: 2, name: "ordinal", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 3, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "old_value", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
        { no: 5, name: "new_value", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    ])
});
/**
 * @generated from enum sf.substreams.internal.v2.StoreDelta.Operation
 */
export var StoreDelta_Operation;
(function (StoreDelta_Operation) {
    /**
     * @generated from enum value: UNSET = 0;
     */
    StoreDelta_Operation[StoreDelta_Operation["UNSET"] = 0] = "UNSET";
    /**
     * @generated from enum value: CREATE = 1;
     */
    StoreDelta_Operation[StoreDelta_Operation["CREATE"] = 1] = "CREATE";
    /**
     * @generated from enum value: UPDATE = 2;
     */
    StoreDelta_Operation[StoreDelta_Operation["UPDATE"] = 2] = "UPDATE";
    /**
     * @generated from enum value: DELETE = 3;
     */
    StoreDelta_Operation[StoreDelta_Operation["DELETE"] = 3] = "DELETE";
})(StoreDelta_Operation || (StoreDelta_Operation = {}));
// Retrieve enum metadata with: proto3.getEnumType(StoreDelta_Operation)
proto3.util.setEnumType(StoreDelta_Operation, "sf.substreams.internal.v2.StoreDelta.Operation", [
    { no: 0, name: "UNSET" },
    { no: 1, name: "CREATE" },
    { no: 2, name: "UPDATE" },
    { no: 3, name: "DELETE" },
]);
/**
 * @generated from message sf.substreams.internal.v2.ModuleOutput
 */
export class ModuleOutput extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string module_name = 1;
         */
        Object.defineProperty(this, "moduleName", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ""
        });
        /**
         * @generated from oneof sf.substreams.internal.v2.ModuleOutput.data
         */
        Object.defineProperty(this, "data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: { case: undefined }
        });
        /**
         * @generated from field: repeated string logs = 4;
         */
        Object.defineProperty(this, "logs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        /**
         * @generated from field: bool debug_logs_truncated = 5;
         */
        Object.defineProperty(this, "debugLogsTruncated", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: false
        });
        /**
         * @generated from field: bool cached = 6;
         */
        Object.defineProperty(this, "cached", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: false
        });
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ModuleOutput().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ModuleOutput().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ModuleOutput().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ModuleOutput, a, b);
    }
}
Object.defineProperty(ModuleOutput, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: proto3
});
Object.defineProperty(ModuleOutput, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "sf.substreams.internal.v2.ModuleOutput"
});
Object.defineProperty(ModuleOutput, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: proto3.util.newFieldList(() => [
        { no: 1, name: "module_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "map_output", kind: "message", T: Any, oneof: "data" },
        { no: 3, name: "store_deltas", kind: "message", T: StoreDeltas, oneof: "data" },
        { no: 4, name: "logs", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
        { no: 5, name: "debug_logs_truncated", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 6, name: "cached", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    ])
});
//# sourceMappingURL=deltas_pb.js.map