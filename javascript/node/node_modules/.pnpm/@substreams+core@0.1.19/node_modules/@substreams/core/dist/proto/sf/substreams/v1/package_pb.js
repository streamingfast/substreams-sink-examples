// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file sf/substreams/v1/package.proto (package sf.substreams.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Any, FileDescriptorProto, Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Modules } from "./modules_pb.js";
/**
 * @generated from message sf.substreams.v1.Package
 */
export class Package extends Message {
    constructor(data) {
        super();
        /**
         * Needs to be one so this file can be used _directly_ as a
         * buf `Image` andor a ProtoSet for grpcurl and other tools
         *
         * @generated from field: repeated google.protobuf.FileDescriptorProto proto_files = 1;
         */
        Object.defineProperty(this, "protoFiles", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        /**
         * @generated from field: uint64 version = 5;
         */
        Object.defineProperty(this, "version", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: protoInt64.zero
        });
        /**
         * @generated from field: sf.substreams.v1.Modules modules = 6;
         */
        Object.defineProperty(this, "modules", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * @generated from field: repeated sf.substreams.v1.ModuleMetadata module_meta = 7;
         */
        Object.defineProperty(this, "moduleMeta", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        /**
         * @generated from field: repeated sf.substreams.v1.PackageMetadata package_meta = 8;
         */
        Object.defineProperty(this, "packageMeta", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        /**
         * Source network for Substreams to fetch its data from.
         *
         * @generated from field: string network = 9;
         */
        Object.defineProperty(this, "network", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ""
        });
        /**
         * @generated from field: google.protobuf.Any sink_config = 10;
         */
        Object.defineProperty(this, "sinkConfig", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * @generated from field: string sink_module = 11;
         */
        Object.defineProperty(this, "sinkModule", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ""
        });
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Package().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Package().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Package().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(Package, a, b);
    }
}
Object.defineProperty(Package, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: proto3
});
Object.defineProperty(Package, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "sf.substreams.v1.Package"
});
Object.defineProperty(Package, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: proto3.util.newFieldList(() => [
        { no: 1, name: "proto_files", kind: "message", T: FileDescriptorProto, repeated: true },
        { no: 5, name: "version", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 6, name: "modules", kind: "message", T: Modules },
        { no: 7, name: "module_meta", kind: "message", T: ModuleMetadata, repeated: true },
        { no: 8, name: "package_meta", kind: "message", T: PackageMetadata, repeated: true },
        { no: 9, name: "network", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 10, name: "sink_config", kind: "message", T: Any },
        { no: 11, name: "sink_module", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ])
});
/**
 * @generated from message sf.substreams.v1.PackageMetadata
 */
export class PackageMetadata extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string version = 1;
         */
        Object.defineProperty(this, "version", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ""
        });
        /**
         * @generated from field: string url = 2;
         */
        Object.defineProperty(this, "url", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ""
        });
        /**
         * @generated from field: string name = 3;
         */
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ""
        });
        /**
         * @generated from field: string doc = 4;
         */
        Object.defineProperty(this, "doc", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ""
        });
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new PackageMetadata().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new PackageMetadata().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new PackageMetadata().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(PackageMetadata, a, b);
    }
}
Object.defineProperty(PackageMetadata, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: proto3
});
Object.defineProperty(PackageMetadata, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "sf.substreams.v1.PackageMetadata"
});
Object.defineProperty(PackageMetadata, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: proto3.util.newFieldList(() => [
        { no: 1, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "doc", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ])
});
/**
 * @generated from message sf.substreams.v1.ModuleMetadata
 */
export class ModuleMetadata extends Message {
    constructor(data) {
        super();
        /**
         * Corresponds to the index in `Package.metadata.package_meta`
         *
         * @generated from field: uint64 package_index = 1;
         */
        Object.defineProperty(this, "packageIndex", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: protoInt64.zero
        });
        /**
         * @generated from field: string doc = 2;
         */
        Object.defineProperty(this, "doc", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ""
        });
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ModuleMetadata().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ModuleMetadata().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ModuleMetadata().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ModuleMetadata, a, b);
    }
}
Object.defineProperty(ModuleMetadata, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: proto3
});
Object.defineProperty(ModuleMetadata, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "sf.substreams.v1.ModuleMetadata"
});
Object.defineProperty(ModuleMetadata, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: proto3.util.newFieldList(() => [
        { no: 1, name: "package_index", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 2, name: "doc", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ])
});
//# sourceMappingURL=package_pb.js.map