"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.some = exports.none = exports.isSome = exports.isOption = exports.isNone = exports.Some = exports.None = void 0;
var Equal = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("@effect/data/Equal"));
var Hash = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("@effect/data/Hash"));
var _Effect = /*#__PURE__*/require("@effect/data/internal/Effect");
var _Pipeable = /*#__PURE__*/require("@effect/data/Pipeable");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/**
 * @since 1.0.0
 */
var _a, _b;
const TypeId = /*#__PURE__*/Symbol.for("@effect/data/Option");
/** @internal */
class Some {
  [(_a = _Effect.EffectTypeId, Equal.symbol)](that) {
    return isOption(that) && isSome(that) && Equal.equals(that.i0, this.i0);
  }
  [Hash.symbol]() {
    return Hash.hash(this.i0);
  }
  toString() {
    return `Some(${String(this.i0)})`;
  }
  toJSON() {
    return {
      _tag: this._tag,
      value: this.i0
    };
  }
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return this.toJSON();
  }
  get [TypeId]() {
    return {
      _A: _ => _
    };
  }
  get value() {
    return this.i0;
  }
  constructor(i0) {
    this.i0 = i0;
    this._tag = "Some";
    this._id = TypeId;
    this.i1 = undefined;
    this.i2 = undefined;
    this[_a] = _Effect.effectVariance;
  }
  pipe() {
    return (0, _Pipeable.pipeArguments)(this, arguments);
  }
}
/** @internal */
exports.Some = Some;
class None {
  constructor() {
    this._tag = "None";
    this._id = TypeId;
    this.i0 = undefined;
    this.i1 = undefined;
    this.i2 = undefined;
    this[_b] = _Effect.effectVariance;
  }
  [(_b = _Effect.EffectTypeId, Equal.symbol)](that) {
    return isOption(that) && isNone(that);
  }
  [Hash.symbol]() {
    return Hash.hash(this._tag);
  }
  toString() {
    return `None()`;
  }
  toJSON() {
    return {
      _tag: this._tag
    };
  }
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return this.toJSON();
  }
  get [TypeId]() {
    return {
      _A: _ => _
    };
  }
  pipe() {
    return (0, _Pipeable.pipeArguments)(this, arguments);
  }
}
/** @internal */
exports.None = None;
const isOption = input => typeof input === "object" && input != null && "_tag" in input && (input["_tag"] === "None" || input["_tag"] === "Some") && Equal.isEqual(input);
/** @internal */
exports.isOption = isOption;
const isNone = fa => fa._tag === "None";
/** @internal */
exports.isNone = isNone;
const isSome = fa => fa._tag === "Some";
/** @internal */
exports.isSome = isSome;
const none = /*#__PURE__*/new None();
/** @internal */
exports.none = none;
const some = a => new Some(a);
exports.some = some;
//# sourceMappingURL=Option.js.map