// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";

export class PositionDelta {
  static encode(message: PositionDelta, writer: Writer): void {
    writer.uint32(8);
    writer.bool(message.isLong);

    writer.uint32(18);
    writer.string(message.executionQuantity);

    writer.uint32(26);
    writer.string(message.executionMargin);

    writer.uint32(34);
    writer.string(message.executionPrice);
  }

  static decode(reader: Reader, length: i32): PositionDelta {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new PositionDelta();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.isLong = reader.bool();
          break;

        case 2:
          message.executionQuantity = reader.string();
          break;

        case 3:
          message.executionMargin = reader.string();
          break;

        case 4:
          message.executionPrice = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  isLong: bool;
  executionQuantity: string;
  executionMargin: string;
  executionPrice: string;

  constructor(
    isLong: bool = false,
    executionQuantity: string = "",
    executionMargin: string = "",
    executionPrice: string = ""
  ) {
    this.isLong = isLong;
    this.executionQuantity = executionQuantity;
    this.executionMargin = executionMargin;
    this.executionPrice = executionPrice;
  }
}
