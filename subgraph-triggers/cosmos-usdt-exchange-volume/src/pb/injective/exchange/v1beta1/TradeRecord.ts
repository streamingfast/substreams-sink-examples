// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";

export class TradeRecord {
  static encode(message: TradeRecord, writer: Writer): void {
    writer.uint32(8);
    writer.int64(message.timestamp);

    writer.uint32(18);
    writer.string(message.price);

    writer.uint32(26);
    writer.string(message.quantity);
  }

  static decode(reader: Reader, length: i32): TradeRecord {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new TradeRecord();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.timestamp = reader.int64();
          break;

        case 2:
          message.price = reader.string();
          break;

        case 3:
          message.quantity = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  timestamp: i64;
  price: string;
  quantity: string;

  constructor(timestamp: i64 = 0, price: string = "", quantity: string = "") {
    this.timestamp = timestamp;
    this.price = price;
    this.quantity = quantity;
  }
}
