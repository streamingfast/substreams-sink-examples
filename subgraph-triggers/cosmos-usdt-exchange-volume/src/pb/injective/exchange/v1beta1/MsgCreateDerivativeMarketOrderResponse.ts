// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";
import { DerivativeMarketOrderResults } from "./DerivativeMarketOrderResults";

export class MsgCreateDerivativeMarketOrderResponse {
  static encode(
    message: MsgCreateDerivativeMarketOrderResponse,
    writer: Writer
  ): void {
    writer.uint32(10);
    writer.string(message.orderHash);

    const results = message.results;
    if (results !== null) {
      writer.uint32(18);
      writer.fork();
      DerivativeMarketOrderResults.encode(results, writer);
      writer.ldelim();
    }
  }

  static decode(
    reader: Reader,
    length: i32
  ): MsgCreateDerivativeMarketOrderResponse {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new MsgCreateDerivativeMarketOrderResponse();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.orderHash = reader.string();
          break;

        case 2:
          message.results = DerivativeMarketOrderResults.decode(
            reader,
            reader.uint32()
          );
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  orderHash: string;
  results: DerivativeMarketOrderResults | null;

  constructor(
    orderHash: string = "",
    results: DerivativeMarketOrderResults | null = null
  ) {
    this.orderHash = orderHash;
    this.results = results;
  }
}
