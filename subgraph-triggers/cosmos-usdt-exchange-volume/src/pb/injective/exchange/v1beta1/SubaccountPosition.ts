// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";
import { Position } from "./Position";

export class SubaccountPosition {
  static encode(message: SubaccountPosition, writer: Writer): void {
    const position = message.position;
    if (position !== null) {
      writer.uint32(10);
      writer.fork();
      Position.encode(position, writer);
      writer.ldelim();
    }

    writer.uint32(18);
    writer.bytes(message.subaccountId);
  }

  static decode(reader: Reader, length: i32): SubaccountPosition {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new SubaccountPosition();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.position = Position.decode(reader, reader.uint32());
          break;

        case 2:
          message.subaccountId = reader.bytes();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  position: Position | null;
  subaccountId: Uint8Array;

  constructor(
    position: Position | null = null,
    subaccountId: Uint8Array = new Uint8Array(0)
  ) {
    this.position = position;
    this.subaccountId = subaccountId;
  }
}
