// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";

export class MsgSignData {
  static encode(message: MsgSignData, writer: Writer): void {
    writer.uint32(10);
    writer.bytes(message.signer);

    writer.uint32(18);
    writer.bytes(message.data);
  }

  static decode(reader: Reader, length: i32): MsgSignData {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new MsgSignData();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.signer = reader.bytes();
          break;

        case 2:
          message.data = reader.bytes();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  signer: Uint8Array;
  data: Uint8Array;

  constructor(
    signer: Uint8Array = new Uint8Array(0),
    data: Uint8Array = new Uint8Array(0)
  ) {
    this.signer = signer;
    this.data = data;
  }
}
