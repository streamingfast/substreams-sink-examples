// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";
import { Deposit } from "./Deposit";

export class SubaccountDeposit {
  static encode(message: SubaccountDeposit, writer: Writer): void {
    writer.uint32(10);
    writer.bytes(message.subaccountId);

    const deposit = message.deposit;
    if (deposit !== null) {
      writer.uint32(18);
      writer.fork();
      Deposit.encode(deposit, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): SubaccountDeposit {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new SubaccountDeposit();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.subaccountId = reader.bytes();
          break;

        case 2:
          message.deposit = Deposit.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  subaccountId: Uint8Array;
  deposit: Deposit | null;

  constructor(
    subaccountId: Uint8Array = new Uint8Array(0),
    deposit: Deposit | null = null
  ) {
    this.subaccountId = subaccountId;
    this.deposit = deposit;
  }
}
