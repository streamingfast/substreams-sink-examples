// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";

export class FeeDiscountTierInfo {
  static encode(message: FeeDiscountTierInfo, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.makerDiscountRate);

    writer.uint32(18);
    writer.string(message.takerDiscountRate);

    writer.uint32(26);
    writer.string(message.stakedAmount);

    writer.uint32(34);
    writer.string(message.volume);
  }

  static decode(reader: Reader, length: i32): FeeDiscountTierInfo {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new FeeDiscountTierInfo();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.makerDiscountRate = reader.string();
          break;

        case 2:
          message.takerDiscountRate = reader.string();
          break;

        case 3:
          message.stakedAmount = reader.string();
          break;

        case 4:
          message.volume = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  makerDiscountRate: string;
  takerDiscountRate: string;
  stakedAmount: string;
  volume: string;

  constructor(
    makerDiscountRate: string = "",
    takerDiscountRate: string = "",
    stakedAmount: string = "",
    volume: string = ""
  ) {
    this.makerDiscountRate = makerDiscountRate;
    this.takerDiscountRate = takerDiscountRate;
    this.stakedAmount = stakedAmount;
    this.volume = volume;
  }
}
