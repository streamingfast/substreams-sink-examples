// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";

export class MsgSetOrchestratorAddresses {
  static encode(message: MsgSetOrchestratorAddresses, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.sender);

    writer.uint32(18);
    writer.string(message.orchestrator);

    writer.uint32(26);
    writer.string(message.ethAddress);
  }

  static decode(reader: Reader, length: i32): MsgSetOrchestratorAddresses {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new MsgSetOrchestratorAddresses();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.sender = reader.string();
          break;

        case 2:
          message.orchestrator = reader.string();
          break;

        case 3:
          message.ethAddress = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  sender: string;
  orchestrator: string;
  ethAddress: string;

  constructor(
    sender: string = "",
    orchestrator: string = "",
    ethAddress: string = ""
  ) {
    this.sender = sender;
    this.orchestrator = orchestrator;
    this.ethAddress = ethAddress;
  }
}
