// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";

export class BandIBCParams {
  static encode(message: BandIBCParams, writer: Writer): void {
    writer.uint32(8);
    writer.bool(message.bandIbcEnabled);

    writer.uint32(16);
    writer.int64(message.ibcRequestInterval);

    writer.uint32(26);
    writer.string(message.ibcSourceChannel);

    writer.uint32(34);
    writer.string(message.ibcVersion);

    writer.uint32(42);
    writer.string(message.ibcPortId);

    const legacyOracleIds = message.legacyOracleIds;
    if (legacyOracleIds.length !== 0) {
      for (let i: i32 = 0; i < legacyOracleIds.length; ++i) {
        writer.uint32(48);
        writer.int64(legacyOracleIds[i]);
      }
    }
  }

  static decode(reader: Reader, length: i32): BandIBCParams {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new BandIBCParams();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.bandIbcEnabled = reader.bool();
          break;

        case 2:
          message.ibcRequestInterval = reader.int64();
          break;

        case 3:
          message.ibcSourceChannel = reader.string();
          break;

        case 4:
          message.ibcVersion = reader.string();
          break;

        case 5:
          message.ibcPortId = reader.string();
          break;

        case 6:
          message.legacyOracleIds.push(reader.int64());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  bandIbcEnabled: bool;
  ibcRequestInterval: i64;
  ibcSourceChannel: string;
  ibcVersion: string;
  ibcPortId: string;
  legacyOracleIds: Array<i64>;

  constructor(
    bandIbcEnabled: bool = false,
    ibcRequestInterval: i64 = 0,
    ibcSourceChannel: string = "",
    ibcVersion: string = "",
    ibcPortId: string = "",
    legacyOracleIds: Array<i64> = []
  ) {
    this.bandIbcEnabled = bandIbcEnabled;
    this.ibcRequestInterval = ibcRequestInterval;
    this.ibcSourceChannel = ibcSourceChannel;
    this.ibcVersion = ibcVersion;
    this.ibcPortId = ibcPortId;
    this.legacyOracleIds = legacyOracleIds;
  }
}
