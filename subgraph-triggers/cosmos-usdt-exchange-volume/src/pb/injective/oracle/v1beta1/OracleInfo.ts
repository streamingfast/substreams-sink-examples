// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";
import { OracleType } from "./OracleType";

export class OracleInfo {
  static encode(message: OracleInfo, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.symbol);

    writer.uint32(16);
    writer.int32(message.oracleType);
  }

  static decode(reader: Reader, length: i32): OracleInfo {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new OracleInfo();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.symbol = reader.string();
          break;

        case 2:
          message.oracleType = reader.int32();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  symbol: string;
  oracleType: OracleType;

  constructor(symbol: string = "", oracleType: OracleType = 0) {
    this.symbol = symbol;
    this.oracleType = oracleType;
  }
}
