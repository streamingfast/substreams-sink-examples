// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";
import { Params } from "./Params";

export class MsgUpdateParams {
  static encode(message: MsgUpdateParams, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.authority);

    const params = message.params;
    if (params !== null) {
      writer.uint32(18);
      writer.fork();
      Params.encode(params, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): MsgUpdateParams {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new MsgUpdateParams();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.authority = reader.string();
          break;

        case 2:
          message.params = Params.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  authority: string;
  params: Params | null;

  constructor(authority: string = "", params: Params | null = null) {
    this.authority = authority;
    this.params = params;
  }
}
