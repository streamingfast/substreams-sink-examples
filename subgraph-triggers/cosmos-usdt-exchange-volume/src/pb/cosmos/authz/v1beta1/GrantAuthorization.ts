// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";
import { Any } from "../../../google/protobuf/Any";
import { Timestamp } from "../../../google/protobuf/Timestamp";

export class GrantAuthorization {
  static encode(message: GrantAuthorization, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.granter);

    writer.uint32(18);
    writer.string(message.grantee);

    const authorization = message.authorization;
    if (authorization !== null) {
      writer.uint32(26);
      writer.fork();
      Any.encode(authorization, writer);
      writer.ldelim();
    }

    const expiration = message.expiration;
    if (expiration !== null) {
      writer.uint32(34);
      writer.fork();
      Timestamp.encode(expiration, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): GrantAuthorization {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new GrantAuthorization();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.granter = reader.string();
          break;

        case 2:
          message.grantee = reader.string();
          break;

        case 3:
          message.authorization = Any.decode(reader, reader.uint32());
          break;

        case 4:
          message.expiration = Timestamp.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  granter: string;
  grantee: string;
  authorization: Any | null;
  expiration: Timestamp | null;

  constructor(
    granter: string = "",
    grantee: string = "",
    authorization: Any | null = null,
    expiration: Timestamp | null = null
  ) {
    this.granter = granter;
    this.grantee = grantee;
    this.authorization = authorization;
    this.expiration = expiration;
  }
}
