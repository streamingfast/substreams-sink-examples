// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";

export class DelegatorStartingInfo {
  static encode(message: DelegatorStartingInfo, writer: Writer): void {
    writer.uint32(8);
    writer.uint64(message.previousPeriod);

    writer.uint32(18);
    writer.string(message.stake);

    writer.uint32(24);
    writer.uint64(message.height);
  }

  static decode(reader: Reader, length: i32): DelegatorStartingInfo {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new DelegatorStartingInfo();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.previousPeriod = reader.uint64();
          break;

        case 2:
          message.stake = reader.string();
          break;

        case 3:
          message.height = reader.uint64();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  previousPeriod: u64;
  stake: string;
  height: u64;

  constructor(previousPeriod: u64 = 0, stake: string = "", height: u64 = 0) {
    this.previousPeriod = previousPeriod;
    this.stake = stake;
    this.height = height;
  }
}
