// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";
import { Any } from "../../../google/protobuf/Any";

export class TxBody {
  static encode(message: TxBody, writer: Writer): void {
    const messages = message.messages;
    for (let i: i32 = 0; i < messages.length; ++i) {
      writer.uint32(10);
      writer.fork();
      Any.encode(messages[i], writer);
      writer.ldelim();
    }

    writer.uint32(18);
    writer.string(message.memo);

    writer.uint32(24);
    writer.uint64(message.timeoutHeight);

    writer.uint32(32);
    writer.bool(message.unordered);

    const extensionOptions = message.extensionOptions;
    for (let i: i32 = 0; i < extensionOptions.length; ++i) {
      writer.uint32(8186);
      writer.fork();
      Any.encode(extensionOptions[i], writer);
      writer.ldelim();
    }

    const nonCriticalExtensionOptions = message.nonCriticalExtensionOptions;
    for (let i: i32 = 0; i < nonCriticalExtensionOptions.length; ++i) {
      writer.uint32(16378);
      writer.fork();
      Any.encode(nonCriticalExtensionOptions[i], writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): TxBody {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new TxBody();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.messages.push(Any.decode(reader, reader.uint32()));
          break;

        case 2:
          message.memo = reader.string();
          break;

        case 3:
          message.timeoutHeight = reader.uint64();
          break;

        case 4:
          message.unordered = reader.bool();
          break;

        case 1023:
          message.extensionOptions.push(Any.decode(reader, reader.uint32()));
          break;

        case 2047:
          message.nonCriticalExtensionOptions.push(
            Any.decode(reader, reader.uint32())
          );
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  messages: Array<Any>;
  memo: string;
  timeoutHeight: u64;
  unordered: bool;
  extensionOptions: Array<Any>;
  nonCriticalExtensionOptions: Array<Any>;

  constructor(
    messages: Array<Any> = [],
    memo: string = "",
    timeoutHeight: u64 = 0,
    unordered: bool = false,
    extensionOptions: Array<Any> = [],
    nonCriticalExtensionOptions: Array<Any> = []
  ) {
    this.messages = messages;
    this.memo = memo;
    this.timeoutHeight = timeoutHeight;
    this.unordered = unordered;
    this.extensionOptions = extensionOptions;
    this.nonCriticalExtensionOptions = nonCriticalExtensionOptions;
  }
}
