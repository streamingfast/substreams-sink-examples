// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";

export class CompactBitArray {
  static encode(message: CompactBitArray, writer: Writer): void {
    writer.uint32(8);
    writer.uint32(message.extraBitsStored);

    writer.uint32(18);
    writer.bytes(message.elems);
  }

  static decode(reader: Reader, length: i32): CompactBitArray {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new CompactBitArray();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.extraBitsStored = reader.uint32();
          break;

        case 2:
          message.elems = reader.bytes();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  extraBitsStored: u32;
  elems: Uint8Array;

  constructor(extraBitsStored: u32 = 0, elems: Uint8Array = new Uint8Array(0)) {
    this.extraBitsStored = extraBitsStored;
    this.elems = elems;
  }
}
