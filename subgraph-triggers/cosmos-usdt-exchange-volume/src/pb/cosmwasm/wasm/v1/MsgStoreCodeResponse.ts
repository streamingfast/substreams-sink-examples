// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";

export class MsgStoreCodeResponse {
  static encode(message: MsgStoreCodeResponse, writer: Writer): void {
    writer.uint32(8);
    writer.uint64(message.codeId);

    writer.uint32(18);
    writer.bytes(message.checksum);
  }

  static decode(reader: Reader, length: i32): MsgStoreCodeResponse {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new MsgStoreCodeResponse();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.codeId = reader.uint64();
          break;

        case 2:
          message.checksum = reader.bytes();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  codeId: u64;
  checksum: Uint8Array;

  constructor(codeId: u64 = 0, checksum: Uint8Array = new Uint8Array(0)) {
    this.codeId = codeId;
    this.checksum = checksum;
  }
}
