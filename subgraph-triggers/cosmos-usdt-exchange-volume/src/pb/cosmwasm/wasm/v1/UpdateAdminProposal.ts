// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";

export class UpdateAdminProposal {
  static encode(message: UpdateAdminProposal, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.title);

    writer.uint32(18);
    writer.string(message.description);

    writer.uint32(26);
    writer.string(message.newAdmin);

    writer.uint32(34);
    writer.string(message.contract);
  }

  static decode(reader: Reader, length: i32): UpdateAdminProposal {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new UpdateAdminProposal();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.title = reader.string();
          break;

        case 2:
          message.description = reader.string();
          break;

        case 3:
          message.newAdmin = reader.string();
          break;

        case 4:
          message.contract = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  title: string;
  description: string;
  newAdmin: string;
  contract: string;

  constructor(
    title: string = "",
    description: string = "",
    newAdmin: string = "",
    contract: string = ""
  ) {
    this.title = title;
    this.description = description;
    this.newAdmin = newAdmin;
    this.contract = contract;
  }
}
