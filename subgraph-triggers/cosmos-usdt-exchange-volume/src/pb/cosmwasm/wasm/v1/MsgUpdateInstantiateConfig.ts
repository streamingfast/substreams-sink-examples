// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";
import { AccessConfig } from "./AccessConfig";

export class MsgUpdateInstantiateConfig {
  static encode(message: MsgUpdateInstantiateConfig, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.sender);

    writer.uint32(16);
    writer.uint64(message.codeId);

    const newInstantiatePermission = message.newInstantiatePermission;
    if (newInstantiatePermission !== null) {
      writer.uint32(26);
      writer.fork();
      AccessConfig.encode(newInstantiatePermission, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): MsgUpdateInstantiateConfig {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new MsgUpdateInstantiateConfig();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.sender = reader.string();
          break;

        case 2:
          message.codeId = reader.uint64();
          break;

        case 3:
          message.newInstantiatePermission = AccessConfig.decode(
            reader,
            reader.uint32()
          );
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  sender: string;
  codeId: u64;
  newInstantiatePermission: AccessConfig | null;

  constructor(
    sender: string = "",
    codeId: u64 = 0,
    newInstantiatePermission: AccessConfig | null = null
  ) {
    this.sender = sender;
    this.codeId = codeId;
    this.newInstantiatePermission = newInstantiatePermission;
  }
}
