// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";
import { AccessConfig } from "./AccessConfig";
import { AccessType } from "./AccessType";

export class Params {
  static encode(message: Params, writer: Writer): void {
    const codeUploadAccess = message.codeUploadAccess;
    if (codeUploadAccess !== null) {
      writer.uint32(10);
      writer.fork();
      AccessConfig.encode(codeUploadAccess, writer);
      writer.ldelim();
    }

    writer.uint32(16);
    writer.int32(message.instantiateDefaultPermission);
  }

  static decode(reader: Reader, length: i32): Params {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new Params();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.codeUploadAccess = AccessConfig.decode(
            reader,
            reader.uint32()
          );
          break;

        case 2:
          message.instantiateDefaultPermission = reader.int32();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  codeUploadAccess: AccessConfig | null;
  instantiateDefaultPermission: AccessType;

  constructor(
    codeUploadAccess: AccessConfig | null = null,
    instantiateDefaultPermission: AccessType = 0
  ) {
    this.codeUploadAccess = codeUploadAccess;
    this.instantiateDefaultPermission = instantiateDefaultPermission;
  }
}
