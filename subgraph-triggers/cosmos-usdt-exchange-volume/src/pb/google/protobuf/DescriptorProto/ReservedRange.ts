// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";

export class ReservedRange {
  static encode(message: ReservedRange, writer: Writer): void {
    writer.uint32(8);
    writer.int32(message.start);

    writer.uint32(16);
    writer.int32(message.end);
  }

  static decode(reader: Reader, length: i32): ReservedRange {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new ReservedRange();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.start = reader.int32();
          break;

        case 2:
          message.end = reader.int32();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  start: i32;
  end: i32;

  constructor(start: i32 = 0, end: i32 = 0) {
    this.start = start;
    this.end = end;
  }
}
