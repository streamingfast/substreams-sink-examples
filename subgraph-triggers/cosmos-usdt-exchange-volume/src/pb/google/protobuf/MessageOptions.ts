// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";
import { UninterpretedOption } from "./UninterpretedOption";

export class MessageOptions {
  static encode(message: MessageOptions, writer: Writer): void {
    writer.uint32(8);
    writer.bool(message.messageSetWireFormat);

    writer.uint32(16);
    writer.bool(message.noStandardDescriptorAccessor);

    writer.uint32(24);
    writer.bool(message.deprecated);

    writer.uint32(56);
    writer.bool(message.mapEntry);

    writer.uint32(88);
    writer.bool(message.deprecatedLegacyJsonFieldConflicts);

    const uninterpretedOption = message.uninterpretedOption;
    for (let i: i32 = 0; i < uninterpretedOption.length; ++i) {
      writer.uint32(7994);
      writer.fork();
      UninterpretedOption.encode(uninterpretedOption[i], writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): MessageOptions {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new MessageOptions();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.messageSetWireFormat = reader.bool();
          break;

        case 2:
          message.noStandardDescriptorAccessor = reader.bool();
          break;

        case 3:
          message.deprecated = reader.bool();
          break;

        case 7:
          message.mapEntry = reader.bool();
          break;

        case 11:
          message.deprecatedLegacyJsonFieldConflicts = reader.bool();
          break;

        case 999:
          message.uninterpretedOption.push(
            UninterpretedOption.decode(reader, reader.uint32())
          );
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  messageSetWireFormat: bool;
  noStandardDescriptorAccessor: bool;
  deprecated: bool;
  mapEntry: bool;
  deprecatedLegacyJsonFieldConflicts: bool;
  uninterpretedOption: Array<UninterpretedOption>;

  constructor(
    messageSetWireFormat: bool = false,
    noStandardDescriptorAccessor: bool = false,
    deprecated: bool = false,
    mapEntry: bool = false,
    deprecatedLegacyJsonFieldConflicts: bool = false,
    uninterpretedOption: Array<UninterpretedOption> = []
  ) {
    this.messageSetWireFormat = messageSetWireFormat;
    this.noStandardDescriptorAccessor = noStandardDescriptorAccessor;
    this.deprecated = deprecated;
    this.mapEntry = mapEntry;
    this.deprecatedLegacyJsonFieldConflicts =
      deprecatedLegacyJsonFieldConflicts;
    this.uninterpretedOption = uninterpretedOption;
  }
}
